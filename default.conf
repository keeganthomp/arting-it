# events {}
# http {
# server {      
#       listen 80 default_server;
#       listen [::]:80;

#       server_name _;

#       return 301 https://$host$request_uri;
      
#       index  index.html index.htm;
#       location / {
#         root   /usr/src/app;
#         # return 301 https://$server_name$request_uri;
#         # this will make so all routes will lead to      
#         # index.html so that react handles the routes              
#         try_files $uri $uri/ /index.html;
#       }
#   }

# server {
#   listen 443 ssl;
#   listen [::]:443 ssl;
  
#   root /usr/src/app;
  
#   # index  index.html index.htm;
#   try_files $uri $uri/ /index.html;


#   ssl_certificate /etc/letsencrypt/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/privkey.pem;
# }
# }

# server {
#         listen 80 default_server;
#         listen [::]:80 default_server;
#         server_name  tealeel.com www.tealeel.com;
#         location / {
#                 root   /var/www/localhost/htdocs/build;
#                 # this will make so all routes will lead to      
#                 # index.html so that react handles the routes              
#                 try_files $uri $uri/ /index.html;
#         }
# # You may need this to prevent return 404 recursion.
#         location = /404.html {
#                 internal;
#         }
# }

server {
    listen [::]:443 ssl ipv6only=on;
listen 443 ssl;
server_name tealeel.com; 
root /var/www/localhost/htdocs/build; 
index index.html;
ssl_certificate /etc/letsencrypt/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/privkey.pem;
# include /etc/letsencrypt/options-ssl-nginx.conf;
# ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
access_log /var/log/nginx/tealeel.com.access.log;
error_log /var/log/nginx/tealeel.com.error.log;
location / {
try_files $uri /index.html =404;
}
}